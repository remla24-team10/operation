apiVersion: v1
kind: Namespace
metadata:
  name: operation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: operation
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
    spec:
      containers:
      - name: app
        image: ghcr.io/remla24-team10/app:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "development"
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: operation
  labels:
    app: app-serv
spec:
  selector:
    app: app
  ports:
  - name: appport
    port: 5000
    targetPort: 5000
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-service-deployment
  namespace: operation
  labels:
    app: model-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-service
  template:
    metadata:
      labels:
        app: model-service
    spec:
      containers:
      - name: model-service
        image: ghcr.io/remla24-team10/model-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: FLASK_ENV
          value: "development"
---
apiVersion: v1
kind: Service
metadata:
  name: model-service
  namespace: operation
spec:
  selector:
    app: model-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: app-monitor
  namespace: operation
  labels:
    release: myprom
spec:
  selector:
    matchLabels:
      app: app-serv
  endpoints:
  - interval: 1s
    port: appport
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: my-gateway
  namespace: operation
spec:
  selector:
    istio: ingressgateway
  servers:
    - port: { number: 80, name: appport , protocol: HTTP }
      hosts: [ "*" ]
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: my-entry-service
  namespace: operation
spec:
  gateways: [ my-gateway ]
  hosts: [ "*" ]
  http:
    - match:
      - uri:
          prefix: /
      route:
        - destination:
            host: app-service


